-- DROP TABLES IF EXISTS

DROP TABLE IF EXISTS products;

DROP TABLE IF EXISTS donations;

DROP TABLE IF EXISTS users_activities;

DROP TABLE IF EXISTS Activities;

DROP TABLE IF EXISTS Projects;

DROP TABLE IF EXISTS Documents;

DROP TABLE IF EXISTS Folders;

DROP TABLE IF EXISTS Users;

DROP TABLE IF EXISTS Persons;

DROP TABLE IF EXISTS Infos;

DROP TABLE IF EXISTS Locations;

-- DELETE ENUM VARIABLES IF EXISTS

DROP TYPE IF EXISTS USER_GENDER;

DROP TYPE IF EXISTS USER_FONCTION;

DROP TYPE IF EXISTS COUNTRY_ACTIVITY;

DROP TYPE IF EXISTS USER_STATUS;

-- CREATE ENUM VARIABLES

CREATE TYPE USER_GENDER AS ENUM('MALE', 'FEMALE');

CREATE TYPE USER_FONCTION AS Enum('BENEVOLAT','PDG','DIRECTOR','EMPLOYEE');

CREATE TYPE COUNTRY_ACTIVITY AS ENUM('FRANCE');

CREATE TYPE USER_STATUS AS ENUM('SINGLE','MARRIED');

-- CREATE TABLES WITHOUT FOREIGN KEYS

CREATE TABLE IF NOT EXISTS Locations(
 id SERIAL PRIMARY KEY,
 country COUNTRY_ACTIVITY NOT NULL,
 city VARCHAR(120) NOT NULL,
 postalcode VARCHAR(255) NOT NULL,
 department VARCHAR(255) DEFAULT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL
);

-- CREATE TABLES WITH FOREIGN KEYS

CREATE TABLE IF NOT EXISTS infos(
 id SERIAL PRIMARY KEY ,
 firstname  VARCHAR(255) NOT NULL,
 lastname   VARCHAR(255) NOT NULL,
 email      VARCHAR(255) NOT NULL,
 gender     USER_GENDER  NOT NULL,
 phone      VARCHAR(255) NOT NULL,
 birth      DATE NOT NULL,
 locationId INT NOT NULL,
 nationality      VARCHAR(255) NOT NULL,
 createdAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt  TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_location_id
      FOREIGN KEY(locationId)
      REFERENCES Locations(id) 
);

CREATE TABLE IF NOT EXISTS Persons (
 id SERIAL PRIMARY KEY ,
 childcount INTEGER  DEFAULT 0,
 birth 	 	DATE NOT NULL,
 status     USER_STATUS  NOT NULL,
 infosId INT NOT NULL,
 createdAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt  TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_person_infos
      FOREIGN KEY(infosId)
      REFERENCES infos(id)
	  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Users (
 id SERIAL PRIMARY KEY ,
 fonction   USER_FONCTION  NOT NULL,
 infoId INT NOT NULL,
 createdAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt  TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_user_infos
      FOREIGN KEY(infoId)
      REFERENCES infos(id)
	  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Folders(
 id SERIAL PRIMARY KEY ,
 pathId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_path_id
      FOREIGN KEY(pathId)
      REFERENCES infos(id)
	  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Documents(
 id SERIAL PRIMARY KEY ,
 filename VARCHAR(255) NOT NULL,
 folderId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_folder_id
      FOREIGN KEY(folderId)
      REFERENCES Folders(id)
	  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Projects(
 id SERIAL PRIMARY KEY ,
 title VARCHAR(255) NOT NULL,
 locationId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_location_id
      FOREIGN KEY(locationId)
      REFERENCES Locations(id)
	  ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS Activities(
 id SERIAL PRIMARY KEY ,
 title VARCHAR(255) NOT NULL,
 projectId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_project_id
      FOREIGN KEY(projectId)
      REFERENCES Projects(id)
	  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Users_Activities(
 id SERIAL PRIMARY KEY ,
 userId INT NOT NULL,
 activityId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_activity_id
      FOREIGN KEY(activityId)
      REFERENCES Activities(id)
	  ON DELETE SET NULL,
 CONSTRAINT fk_user_id
      FOREIGN KEY(userId)
      REFERENCES Users(id)
	  ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Donations(
 id SERIAL PRIMARY KEY ,
 title VARCHAR(255) NOT NULL,
 personId INT NOT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_person_id
      FOREIGN KEY(personId)
      REFERENCES Persons(id)
	  ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS Products(
 id SERIAL PRIMARY KEY ,
 name VARCHAR(255) NOT NULL,
 donationId INT DEFAULT NULL,
 createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deletedAt TIMESTAMP DEFAULT NULL,
 CONSTRAINT fk_donation_id
      FOREIGN KEY(donationId)
      REFERENCES donations(id)
	  ON DELETE SET DEFAULT
);